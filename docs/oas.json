{"swagger": "2.0", "info": {"x-logo": {"altText": "Shopify logistics", "url": "http://cdn.onlinewebfonts.com/svg/img_372429.png"}, "title": "Shopify Logistics API"}, "host": "localhost", "basePath": "/api", "schemes": ["http"], "paths": {"/item": {"post": {"summary": "Create an item", "tags": ["Item Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the item to update and it's new attributes", "schema": {"$ref": "#/definitions/Item"}}], "responses": {"200": {"description": "item has been created."}}}, "patch": {"summary": "Update an item", "tags": ["Item Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the item to update and it's new attributes", "schema": {"$ref": "#/definitions/Item"}}], "responses": {"200": {"description": "item has been updated."}, "404": {"description": "Could not find an item with that id."}}}, "delete": {"summary": "Delete an item", "tags": ["Item Endpoints"], "produces": ["application/json"], "parameters": [{"in": "body", "name": "id", "description": "the item to be deleted", "schema": {"$ref": "#/definitions/Item"}}], "responses": {"200": {"description": "This item has been deleted.", "schema": {"$ref": "#/definitions/Item"}}, "404": {"description": "Could not find a item with that id."}}}}, "/item/{item}": {"get": {"summary": "Fetch an item by ID", "description": "This fetches an item by id.", "tags": ["Item Endpoints"], "produces": ["application/json"], "parameters": [{"in": "path", "name": "item_id", "type": "integer", "required": true, "example": 1}], "responses": {"200": {"description": "A list of items.", "schema": {"$ref": "#/definitions/Item"}}, "404": {"description": "No items found with that ID."}}}}, "/items": {"get": {"summary": "Filter items", "description": "This fetch acts as a filter based on the given query params. If none are given, then all params are fetched. Operator must be one of: eq, gt, lt, gte, or lte.", "tags": ["Item Endpoints"], "produces": ["application/json"], "parameters": [{"in": "query", "name": "property", "type": "string", "required": false, "example": "sale_date"}, {"in": "query", "name": "operator", "type": "string", "required": false, "example": "eq"}, {"in": "query", "name": "value", "type": "string", "required": false, "example": "2021-5-28"}], "responses": {"200": {"description": "A list of items.", "schema": {"type": "array", "items": {"$ref": "#/definitions/Item"}}}, "404": {"description": "No items found."}}}}}, "definitions": {"Item": {"type": "object", "required": ["item_id", "item_title", "item_description", "item_quantity"], "properties": {"item_id": {"type": "integer", "description": "to identify the items from other items", "example": 1}, "item_title": {"type": "string", "description": "give the item a title", "example": "Tomato Paste"}, "item_description": {"type": "string", "description": "a description of the item", "example": "This tomato paste is so good, it can be used as plaster for doors, windows, and bath tiles."}, "item_quantity": {"type": "integer", "description": "the remaining quantity of this item", "example": 36}, "sale_date": {"type": "string", "description": "the date on which this item will go on sale", "example": "2021-5-28"}, "tag": {"type": "string", "description": "a tag for the item", "example": "Shoes"}}}}, "tags": [{"name": "Item", "x-display": "Item", "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Item\" />"}], "x-tagGroups": [{"name": "API Endpoints", "tags": [["Item Endpoints"]]}, {"name": "Models", "tags": ["Item"]}]}